'use strict';

const t = require('../../index.js');

t.test('after', t => {
  let called = [];
  t.test('multiple after callbacks', t => {
    t.after(() => { called.push('one'); });
    t.after(() => { called.push('two'); });
    t.end();
  });
  t.equal(called[0], 'two', 'second callback called first');
  t.equal(called[1], 'one', 'first callback called second');

  called = [];
  t.test('multiple teardown callbacks', t => {
    t.teardown(() => { called.push('one'); });
    t.teardown(() => { called.push('two'); });
    t.end();
  });
  t.equal(called[0], 'two', 'second callback called first');
  t.equal(called[1], 'one', 'first callback called second');

  called = [];
  t.test('end called multiple times', t => {
    t.after(() => { called.push('one'); });
    t.end();
    t.end();
  });
  t.equal(called.length, 1, 'callback is called once');
  t.end();
});
/*
TAP version 13
# test: after
# test: multiple after callbacks
ok 1 test: multiple after callbacks
ok 2 second callback called first
ok 3 first callback called second
# test: multiple teardown callbacks
ok 4 test: multiple teardown callbacks
ok 5 second callback called first
ok 6 first callback called second
# test: end called multiple times
not ok 7 end called after end
  ---
  operation: end
  at: <dirname>/data/case-29-after:28:7
  ...
not ok 8 test: end called multiple times
ok 9 callback is called once
not ok 10 test: after

1..10
# tests 10
# pass  7
# fail  3
*/
